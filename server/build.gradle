dependencies {
    implementation project(':api')
    implementation project(':test-database')

    //ProdDB
    api group: 'org.postgresql', name: 'postgresql'

    implementation group: 'com.zaxxer', name: 'HikariCP'


    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation "org.testcontainers:postgresql"

    implementation(group: 'org.springframework.retry', name: 'spring-retry')

    implementation(group: 'org.springframework', name: 'spring-aspects')

    //Metrics
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator')
    implementation(group: 'io.micrometer', name: 'micrometer-registry-prometheus')

    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder'

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui'

}
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-remote-api'


jar {
    enabled = true
    archivesBaseName = 'hostalusc'
    manifest { attributes "Main-Class": "co.com.usc.hostalusc.server.UscHostaluscServerApplication" }
}
bootJar {
    enabled = true
    archiveClassifier = 'boot'
}

//This Task generates the build information.
// The image name must be the same as the generated by the docker plugin
task buildMetadata (type: WriteProperties){
    setOutputFile(file("$projectDir/build/build-info.properties"))
    property("version", project.version)
    property("name", rootProject.name)
    property("group", project.group)
//    property("dockerImage", "$project.group/$rootProject.name:$project.version")
}
build.finalizedBy(buildMetadata)
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
task createDockerfile(type: Dockerfile) {
    dependsOn (build,jar)
    from('openjdk:17-alpine')
    environmentVariable("APP_JAR", "${rootProject.name}-${version}.jar")
    addFile("\"hostalusc${version}-boot.jar\"", "/app.jar")
    entryPoint('sh')
    defaultCommand('-c', 'java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar')
    exposePort(8080)
    destFile = new File("$buildDir/libs/Dockerfile")
}
task buildDocker(type: DockerBuildImage) {
    dependsOn createDockerfile
    def rootDir = "${project.projectDir.parent}"
    dockerFile = createDockerfile.destFile
    inputDir = new File("$buildDir/libs")
    images.add("$project.group/hostalusc:$project.version")
}